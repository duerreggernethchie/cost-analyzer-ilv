<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://duerreggernethchie.github.io/cost-analyzer-ilv/feed.xml" rel="self" type="application/atom+xml" /><link href="https://duerreggernethchie.github.io/cost-analyzer-ilv/" rel="alternate" type="text/html" /><updated>2020-07-11T13:52:18-05:00</updated><id>https://duerreggernethchie.github.io/cost-analyzer-ilv/feed.xml</id><title type="html">fastpages</title><subtitle>An easy to use blogging platform with support for Jupyter Notebooks.</subtitle><entry><title type="html">Lessons_learned_and_discussion</title><link href="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/11/Lessons_learned_and_discussion.html" rel="alternate" type="text/html" title="Lessons_learned_and_discussion" /><published>2020-07-11T00:00:00-05:00</published><updated>2020-07-11T00:00:00-05:00</updated><id>https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/11/Lessons_learned_and_discussion</id><content type="html" xml:base="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/11/Lessons_learned_and_discussion.html">&lt;h1 id=&quot;lessons-learned-and-discussion&quot;&gt;Lessons learned and discussion&lt;/h1&gt;

&lt;h2 id=&quot;zelenne-huhn&quot;&gt;Zelenne Huhn&lt;/h2&gt;

&lt;h2 id=&quot;nethchie&quot;&gt;Nethchie&lt;/h2&gt;

&lt;h2 id=&quot;tomasz&quot;&gt;Tomasz&lt;/h2&gt;

&lt;h2 id=&quot;christian&quot;&gt;Christian&lt;/h2&gt;

&lt;h2 id=&quot;markus&quot;&gt;Markus&lt;/h2&gt;</content><author><name></name></author><summary type="html">Lessons learned and discussion</summary></entry><entry><title type="html">Software design</title><link href="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/10/Software-Design.html" rel="alternate" type="text/html" title="Software design" /><published>2020-07-10T00:00:00-05:00</published><updated>2020-07-10T00:00:00-05:00</updated><id>https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/10/Software%20Design</id><content type="html" xml:base="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/10/Software-Design.html">&lt;h1 id=&quot;cost-analyser-application--software-design&quot;&gt;Cost Analyser Application – Software Design&lt;/h1&gt;

&lt;p&gt;[TOC]&lt;/p&gt;

&lt;h2 id=&quot;development-model&quot;&gt;Development Model&lt;/h2&gt;

&lt;p&gt;We will use as development waterfall model the development cycle to improve and ensure software quality. Following image will show the phases of the model:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./media/ca_dev_cycle.png&quot; alt=&quot;ca_dev_cycle&quot; style=&quot;zoom:50%;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;1. Planning&lt;/strong&gt;
This phase will define the main goal of the development:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setting a goal&lt;/li&gt;
  &lt;li&gt;Planning a budget&lt;/li&gt;
  &lt;li&gt;Finding the right resources to begin (developers, materials)&lt;/li&gt;
  &lt;li&gt;Scheduling&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This phase in the cycle will require a lot of communication between the development and the stakeholder(s).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;2. Requirements /Analysis&lt;/strong&gt;
This is one of the most most important steps in the cycle. The project management team must communicate with the development team. The project management team gets  the requirements from the stakeholders. State of the art is an agile development modus.. Agile methods like Design Thinking may produce a backlog of tasks to be performed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;3. Design&lt;/strong&gt;
After the requirements are discussed, agreed upon and understood the next step is for the architects of the project. The design phase requires consistency, this is why developers use frameworks! Developers will use design patterns to solve algorithmic problems. The design phase should be documented so the developers know exactly what design patterns they want to use, and where they want to use them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;4. Implementation&lt;/strong&gt;
This phase produces the software. Agile development is very helpful because it helps organize development goals in a timely manner using “&lt;strong&gt;Sprints&lt;/strong&gt;”.  The project management team or the product owner should be heavily involved with this phase to ensure all expectations are met by the development team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;5. Testing&lt;/strong&gt;
One of the most  important steps in the lifecycle of software development. This phase ensures that you know if your software is of quality to deploy. Testing will help measure a number of things:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Code quality&lt;/li&gt;
  &lt;li&gt;Unit testing (functional tests)&lt;/li&gt;
  &lt;li&gt;Integration testing&lt;/li&gt;
  &lt;li&gt;Performance testing&lt;/li&gt;
  &lt;li&gt;Security testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;6. Deployment&lt;/strong&gt;
We will using pipelines to automate deploy the software as soon as an issue is closed (feature deployment). This will give all of the users the “finished” product until bugs are found which leads us to our next phase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;7. Maintenance&lt;/strong&gt;
Bugs will be the biggest issue in this phase. Users will report them and it is up to the development team to fix anything that is lowering the functionality of the software. For new features we will start again with step/phase 1.&lt;/p&gt;

&lt;h2 id=&quot;system-architecture&quot;&gt;System architecture&lt;/h2&gt;
&lt;p&gt;More information about the system you can find on the document &lt;a href=&quot;../Architecture/Cost Analyser Application - System and Software Architecture.md&quot;&gt;Cost Analyser Application – System and software Architecture &lt;/a&gt; and for Data Science in the document &lt;a href=&quot;../Architecture/Data_Science_Architektur.md&quot;&gt;Cost Analyser Application – Data Science Architecture &lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;design-patterns&quot;&gt;Design Patterns&lt;/h2&gt;

&lt;p&gt;Following design patterns will be used in our software:&lt;/p&gt;

&lt;h3 id=&quot;command-pattern&quot;&gt;Command Pattern&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Command&lt;/strong&gt; is a behavioral design pattern that turns a request into a stand-alone object that contains all information about the request. This transformation lets you parameterize methods with different requests, delay or queue a request’s execution, and support undoable operations.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Transactional behavior:&lt;/strong&gt; Database engine or csv upload process may keep a list of operations that have been or will be performed. If one of them fails, all others can be reversed or discarded (usually called &lt;em&gt;rollback&lt;/em&gt;). For example, if two database tables that refer to each other must be updated, and the second update fails, the transaction can be rolled back, so that the first table does not now contain an invalid reference.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;GUI buttons and menu items:&lt;/strong&gt; In the ability to perform the desired command, an “Action” may have an associated icon, keyboard shortcut, tooltip text, and so on. A toolbar button or menu item component may be completely initialized using only the Action object.&lt;/p&gt;

&lt;h3 id=&quot;bridge-pattern&quot;&gt;Bridge Pattern&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;An abstraction and its implementation should be defined and extended independently from each other.&lt;/li&gt;
  &lt;li&gt;A compile-time binding between an abstraction and its implementation should be avoided so that an implementation can be selected at run-time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For defining the mapping of our bank accounts it is necessary to have an “Abstraction” of a standard bank account to its “Implementors” like Hypo or Volksbank&lt;/p&gt;

&lt;h3 id=&quot;decorator-pattern&quot;&gt;Decorator Pattern&lt;/h3&gt;

&lt;p&gt;The decorator pattern can be used to extend (decorate) the functionality of a certain object statically, or in some cases at run-time, independently of other instances of the same class, provided some groundwork is done at design time. This is achieved by designing a new &lt;em&gt;Decorator&lt;/em&gt; class that wraps the original class.&lt;/p&gt;

&lt;p&gt;In the Cost Analyser Application we will use the Decorator Pattern also in the implementation of bank accounts and for logging within our functions.&lt;/p&gt;

&lt;h2 id=&quot;api&quot;&gt;API&lt;/h2&gt;

&lt;p&gt;An API is the base of all the apps that deal with data or enable communication between two products or services. We will empower our apps and UIs to other mobile application or platform to share its data with our or their apps/platforms. It will ease the user experience without involving the developers.&lt;/p&gt;

&lt;p&gt;In the future, we want to provide our service also to other tools to integrate it.&lt;/p&gt;

&lt;h3 id=&quot;main-features-of-our-api&quot;&gt;Main features of our API:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Search by criteria&lt;/strong&gt;: The API will let the users search data based on different criteria, like a date or shop name.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Paging&lt;/strong&gt;: Many times, it happens that we do not want to see the complete data changed, but just a glimpse of it. In such a scenario, the API should be capable of determining how much data to display in one go and at what frequency. It should also inform the user about the no. of pages of data remaining.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Sorting&lt;/strong&gt;: To ensure that the user receives all the pages of data one-by-one, the API should empower the users to sort data as per the time of modification or some other condition.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;JSON Support/ REST&lt;/strong&gt;: The REST APIs are stateless, light-weighted and let you retry the upload mobile app process if it fails. Besides, JSON’s syntax resembles that of most of the programming languages, which make it easy for a mobile app developer to parse it into any other language.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Authorization via OAuth&lt;/strong&gt;: It is again necessary that your API authorizes via OAuth since it is faster than other methods – you just need to click on a button and it’s done.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Use Throttling&lt;/strong&gt;: App Throttling is needed for redirecting overflow of traffic, backup APIs and safeguarding it from DoS (Denial of Service) attacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;http-errors&quot;&gt;HTTP Errors&lt;/h3&gt;

&lt;p&gt;Our API must be able to handle all kind of requests and return errors in as descriptive and standard form. The following are the default HTTP error codes we will use:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;200 - Generic everything is OK.&lt;/li&gt;
  &lt;li&gt;201 - Created something OK.&lt;/li&gt;
  &lt;li&gt;202 - Accepted but is being processed a sync (power off, provisioning, etc.).&lt;/li&gt;
  &lt;li&gt;400 - Bad Request (invalid syntax).&lt;/li&gt;
  &lt;li&gt;401 - Unauthorized (no current user and there should be).&lt;/li&gt;
  &lt;li&gt;403 - The current user is forbidden from accessing this data.&lt;/li&gt;
  &lt;li&gt;404 - That URL is not a valid route, or the item resource does not exist.&lt;/li&gt;
  &lt;li&gt;410 – Data is deleted or doesn’t exist.&lt;/li&gt;
  &lt;li&gt;405 - Method Not Allowed (calling post method when only get is allowed, etc.).&lt;/li&gt;
  &lt;li&gt;500 – API internal error.&lt;/li&gt;
  &lt;li&gt;503 - System is in maintenance mode.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;api-endpoints&quot;&gt;API Endpoints:&lt;/h3&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;Usage&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;GET&lt;/td&gt;
      &lt;td&gt;Used to retrieve a representation of a resource.&lt;/td&gt;
      &lt;td&gt;GET stored data by date, shop&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;POST&lt;/td&gt;
      &lt;td&gt;Used to create new new resources and sub-resources&lt;/td&gt;
      &lt;td&gt;POST new CSV file to upload a new bank export&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PUT&lt;/td&gt;
      &lt;td&gt;Used to update existing resources&lt;/td&gt;
      &lt;td&gt;PUT to update an already uploaded bank export&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;PATCH&lt;/td&gt;
      &lt;td&gt;Used to update existing resources&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;DELETE&lt;/td&gt;
      &lt;td&gt;Used to delete existing resources&lt;/td&gt;
      &lt;td&gt;Delete one or more entries&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;testing&quot;&gt;Testing&lt;/h2&gt;

&lt;h3 id=&quot;characteristics-of-a-banking-application&quot;&gt;Characteristics of a Banking Application&lt;/h3&gt;

&lt;p&gt;Before we begin testing, it’s important to note the standard features expected of any banking/finance application. A standard banking application should meet all these characteristics as mentioned below.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Support thousands of concurrent user sessions&lt;/li&gt;
  &lt;li&gt;Integration with numerous bank accounts&lt;/li&gt;
  &lt;li&gt;Process fast and secure&lt;/li&gt;
  &lt;li&gt;Include massive storage system.&lt;/li&gt;
  &lt;li&gt;To troubleshoot customer issues, it should have high auditing/logging capability&lt;/li&gt;
  &lt;li&gt;Support users on multiple platforms (Mac, Linux, Unix, Windows, mobile devices)&lt;/li&gt;
  &lt;li&gt;Support users from multiple locations&lt;/li&gt;
  &lt;li&gt;Support multi-lingual users&lt;/li&gt;
  &lt;li&gt;Support multiple service sectors (Loans, Retail banking etc.)&lt;/li&gt;
  &lt;li&gt;Foolproof disaster management mechanism&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;test-phases&quot;&gt;Test Phases&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Requirement Review:&lt;/strong&gt; Quality analysts, PO, and development leads are involved in this task. The requirements document is reviewed and cross-checked to ensure that it does not affect the workflow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Database Testing:&lt;/strong&gt; Important part of our finance application testing. This testing is done to ensure data integrity, data loading, data migration, stored procedures, and functions validation, rules testing, etc.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Integration Testing:&lt;/strong&gt; Test that all components that are developed are integrated and validated&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Functional Testing:&lt;/strong&gt; The usual software testing activities like Test Cases. A Test Case will review and test an execution and is done during this phase&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Security Testing:&lt;/strong&gt; It ensures that the software does not have any security flaws. During test preparation, QA team needs to include both negative as well as positive test scenarios so as to break into the system and report it before any unauthorized individual access it. For Security Testing, automation tools are used while for Manual Testing tools like Proxy Sniffer, Paros proxy, HTTP watch, etc. are used&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Usability Testing:&lt;/strong&gt; It ensures that different people will be able to use the system as normal user and don’t affect the other users performance or stability.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Acceptance Testing:&lt;/strong&gt; It is the final stage of testing done by the end users to ensure the compliance of the application with the real world scenario.&lt;/p&gt;

&lt;h3 id=&quot;sample-test-cases&quot;&gt;Sample Test Cases&lt;/h3&gt;

&lt;h4 id=&quot;admin-test-cases&quot;&gt;Admin Test Cases:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Verify Admin login with valid and Invalid data
- Verify admin login without data
- Verify all admin home links
- Verify admin change password with valid and invalid data
- Verify admin change password without data
- Verify admin change password with existing data
- Verify admin logout
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;for-users&quot;&gt;For Users:&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Verify all links
- Verify customers login with valid and invalid data
- Verify customers login without data
- Verify csv upload with and without data
- Verify csv upload with valid or invalid data
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;for-new-users&quot;&gt;For new Users&lt;/h3&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- Create a new user with valid and invalid data
- Create a new user without data
- Verify cancel and reset option
- Update user with valid and invalid data
- Update user with existing data
- Verify cancel option
- Verify deletion of the user
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html">Cost Analyser Application – Software Design</summary></entry><entry><title type="html">Requirements engineering</title><link href="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/10/Requirements-Engineering.html" rel="alternate" type="text/html" title="Requirements engineering" /><published>2020-07-10T00:00:00-05:00</published><updated>2020-07-10T00:00:00-05:00</updated><id>https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/10/Requirements%20Engineering</id><content type="html" xml:base="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/10/Requirements-Engineering.html">&lt;h1 id=&quot;cost-analyser-application--requirements-engineering&quot;&gt;Cost Analyser Application – Requirements Engineering&lt;/h1&gt;

&lt;p&gt;[TOC]&lt;/p&gt;

&lt;h2 id=&quot;business-goals-of-the-software&quot;&gt;Business Goals of the Software&lt;/h2&gt;

&lt;p&gt;The Cost Analyser application is able to help user track his bank account’s expenditures and receivables. A user will get an overview of all his expenses over several bank accounts by uploading his CSV exports. The CSV exports are downloaded from his bank accounts. The tool is able to show a dashboard with an overview of all the clustered categories (or an individual category). The user is able to filter by date and categories.&lt;/p&gt;

&lt;p&gt;Figure 1: Draft of the dashboard shows a first PoC of the dashboard. Every user could have several bank accounts. As an example, the dashboard shows an account from Hypotirol, Sparkasse and Anglo Austrian Bank. Every bank account on the application shows a summary of the expenditure, receivables and balance through a line graph (line graph shows only last 3 to 6 months). However, if the user will click either button expenditure, receivable, the user has the chance to see a daily, monthly and yearly overview. And the graph next to it shows the cluster of categories (for expenditure for example: shelter, food, clothing, USAW). The very left graph shows the user’s total balance of all his bank accounts.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/bank_dashboard.png&quot; alt=&quot;dashboard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Figure 1: Sample Dashboard&lt;/p&gt;

&lt;h2 id=&quot;main-requirements&quot;&gt;Main Requirements&lt;/h2&gt;

&lt;h3 id=&quot;log-in-screen&quot;&gt;LOG-IN SCREEN&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The user should register himself in the system registration screen before he can use it, this for security reasons. The username has to be an email address and the password should be secure enough since the data is very sensitive. Password must be at least 12 characters and must contain at least one capital leter, one number and one symbol.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the registration process the user must give a recovery email as well as a question with an answer in order to be able to recover username or password. Optionally the user is able to add a phone number to setup a multifactor authentication with TAN codes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The user will have to login every time he wants to use the system (username and password).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the user forgets his username and/or password, there should be a button or link for the user to recover them. In this new recovery window, the user will give either the recovery e-mail or the phone number he gave for recovering when registering. The system will send a link to the recovery email for reseting username and password. When the user click on the link in the email, he will be redirected to a window where he will be able to select a new password. The username will be already filled-in in the field username.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After the first time of login, the system will guide the user to upload his first CSV file. Hints for exporting and uploading the data will be given in form of pop-up windows or will be opened as instructions in an extra window or with a video which will need to be started by the user.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;log-in-screen--possible-changes&quot;&gt;LOG-IN SCREEN – Possible changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Prepare the system to log-in with best-sign technology, that means, the access should be confirmed from another confirmed device thru fingerprint.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will accept other formats of documents such as xls, xlsx and others to come. For this reason, the uploading instructions must be adapted to the new comers.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;home-screen--main-dashboard&quot;&gt;HOME SCREEN – Main Dashboard&lt;/h3&gt;
&lt;p&gt;Like shown in Figure 1: Draft of the dashboard, a dashboard with following charts will be shown:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Balance of all accounts the customer have.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The user should be able to select/filter which banks he/she wants to get shown.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Overview per bank account with all receivables, expenditures and balance from the last 3 months. This can be changed and extended till 1 year.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There should be 3 buttons to decide what should be shown, receivables, expenditures or just the balance instead of the three together.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;For the expenditures, there should be a graph where the user can see (clustered) for which classes he/she has spent how much money.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The user should have the option to save his preferences. For example, he/she should be able to select which banks, which information he want to become shown everytime he/she is logging-in. This should be a “standard layout”. Each layout must be saved with a name. These layouts should be just shown to the owner.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The amount of allowed layouts should be unlimited.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Layout preferences must be saved in order to be able to suggest the user standard layouts.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The name of the layout should be no longer than 30 characters. This information should be shown to the user in a help information window to the field.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The user shall be able to export the dashboards as a standardized CSV or Excel report.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;home-screen--possible-changes&quot;&gt;HOME SCREEN – Possible changes&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;New banks logos and CSV documents will be included in the software.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system must be able to show more dashboards which could be added in the future.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The classes of the expenditures will be adapting themselves as more data will be collected.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will be offering different standard layout according to the preferences of the customers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will be showing as well the summarized data in form of a table which will be exportable in CSV or Excel as well.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;security&quot;&gt;SECURITY&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The user should be able to be logged-in just once. The system should deny other attempts to log-in a user which is already logged-in.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The user should get a notification per E-Mail if his/her user was used at the moment he/she was already logged-in in the system.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;After 10 minutes of inactivity, the user should be asked if he/she wants to remain online. This question should be confirmed with a button “Yes, I want to remain online”. If the question is not answered in 1 minute, the system must logout the user.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;security--possible-changes&quot;&gt;SECURITY – Possible changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The system should work as well in other countries.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will need to be adapted to new security rules for banking software.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;help-menu&quot;&gt;HELP MENU&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;There should be a FAQ section.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In this section, the user will be able to search for the topic of his/her interest with the use of help-words. The search must not be case sensitive.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In this menu, there should be one or more csv model documents that can give an idea to the user what kind of csv documents the system can work with.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;help-menu--posible-changes&quot;&gt;HELP MENU – Posible changes&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The FAQ section will be expanded constantly according to the needs of the users.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will accept other formats in the future. There must be as well model documents from these other formats.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There will be a contact formular in this section to receive questions not found in the FAQ.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will use the given text in the search field by the users and will look automatically this text in the available contents in the FAQ and will suggest these questions to the user.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;general-functionalities&quot;&gt;GENERAL FUNCTIONALITIES&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The user should be able to log-out with just 2 clicks, no mattering where he/she is at the moment in the system. The log-out button should be confirmed with a warning window “Are you sure you want to log-out&quot; or “Finnish session”? This needs to be confirmed or denied. This will avoid that the user will be logged-out unvoluntarily in case he clicked by mistake.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The dashboard should be as big as the browser. That means, if the user changes the size with the help of the keys “Strg” + “+” or “-“, the dashboard shown, included all information there should adapt to this new size.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system should be available in English and German.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system shall work on all main browsers. The system will be available in the internet browsers of the devices.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system shall work on several devices like big/small screens and iOs and Android devices.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will map all uploaded CSV files to a standard model of the system.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The user is able to upload files easily with a button “Search file”. This will open the windows explorer and a file will be able to be selected.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system should recognize which browser it is being opened with, and if it is not a supported browser, it should tell the user which browsers are supported.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;general-functionalities--possible-changes&quot;&gt;GENERAL FUNCTIONALITIES – Possible changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The system will be adapted to new internet browsers versions.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system should be expandible to read more formats and not just CSV.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will save the information of the opened browser which was not supported in order to adapt it to these new internet browsers.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will be adapted to new operating systems if needed.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will be extendible to other languages.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;not-functional-attributes-system-performance&quot;&gt;NOT FUNCTIONAL ATTRIBUTES (SYSTEM PERFORMANCE)&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The system should be able to show the Home-Screen dashboard after log-in in maximum 2 seconds for the average user session.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When the user will change the actual displayed information, this changes should be shown in within a couple of seconds.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The response time for a filter request may have no longer duration than 2 seconds for an average user session.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;connection-issues&quot;&gt;CONNECTION ISSUES&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;If the server would be not reachable, the system will show the user exactly this information on the screen, that the server at the moment is not available. The text to show should suggest as well to use F5 to refresh the shown information. This way, the user can understand why he is not becoming any information shown.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;software-issues&quot;&gt;SOFTWARE ISSUES&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;If the software has problems with loading the csv documents because of its format, the user should be informed about it. “The CSV document can’t be read, please revise it and try again. Check as well in the FAQ section for possible solutions”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In case of failure by uploading, the system will suggest the user to check on the standard files accepted. Links for these files will be shown right under the failure text.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The user shall also have the possibility of requesting a new standard file from (maybe) a new bank (which is currently not supported by the system). As well, together with the failure text, there should be a link for requesting a new standard file. The link should redirect to a list with supported banks. If the user doesn’t find the desired bank in the list, there should be the option to upload a new CSV file.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will send a confirmation if the file was uploaded correctly or a failure message instead.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;software-issues--possible-changes&quot;&gt;SOFTWARE ISSUES – Possible changes&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The system will generate a log file when failure will be detected and this will be ready to be sent to the development team per e-mail. For that, the user needs to have the chance to accept that this information will be sent. A failure window should be opened as well in which the user can accept with an “ok”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The system will open a window for selecting the right columns to use. The system will try to recognize which columns are needed and will suggest these to the user. Not recognized columns will be selected by the user manually. If possible, the system will try to change the format of the columns when possible. If a data column is missing, the user will know what is the problem with his file.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-data&quot;&gt;THE DATA&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The data which will be saved in our DB, must be able to be exported anonym to banks for example in order to perform machine learning analysis.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;model-the-central-elements-using-suitable-uml-diagrams&quot;&gt;Model the central elements using suitable UML diagrams&lt;/h2&gt;

&lt;p&gt;At present, here is the idea of the application design through an UML diagram.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The application reads the bank account CSV file specified in the FileReader Class&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Then it loads config of bank CSV file based on the IBAN&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;It maps CSV fields to general data format for later use&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, it calculates balance based on expenditure/receivable transactions&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;em&gt;To do: We can maybe add Dashboard Class if you like the idea of having a dashboard. A class for Clustering based machine learning algorithm.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./media/re_uml-diagram.png&quot; alt=&quot;re_uml-diagram&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Figure 2: UML diagram&lt;/p&gt;</content><author><name></name></author><summary type="html">Cost Analyser Application – Requirements Engineering</summary></entry><entry><title type="html">Requirements evolution</title><link href="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/09/Requirements-Evolution.html" rel="alternate" type="text/html" title="Requirements evolution" /><published>2020-07-09T00:00:00-05:00</published><updated>2020-07-09T00:00:00-05:00</updated><id>https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/09/Requirements%20Evolution</id><content type="html" xml:base="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/09/Requirements-Evolution.html">&lt;h1 id=&quot;cost-analyser-application--requirements-evolution&quot;&gt;Cost Analyser Application – Requirements Evolution&lt;/h1&gt;

&lt;p&gt;[TOC]&lt;/p&gt;

&lt;h2 id=&quot;improving-uml-diagram&quot;&gt;Improving UML Diagram&lt;/h2&gt;

&lt;p&gt;I believe our FileReader class should be extended so that it will be able to read different format and not only accepting CSV, or we can create 1 class for for just identifying which format the user is uploading. What do you think?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./media/re_uml-diagram_v2.png&quot; alt=&quot;re_uml-diagram_v2&quot; /&gt;&lt;/p&gt;</content><author><name></name></author><summary type="html">Cost Analyser Application – Requirements Evolution</summary></entry><entry><title type="html">System and software architecture</title><link href="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/09/System-and-Software-Architecture.html" rel="alternate" type="text/html" title="System and software architecture" /><published>2020-07-09T00:00:00-05:00</published><updated>2020-07-09T00:00:00-05:00</updated><id>https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/09/System%20and%20Software%20Architecture</id><content type="html" xml:base="https://duerreggernethchie.github.io/cost-analyzer-ilv/2020/07/09/System-and-Software-Architecture.html">&lt;h1 id=&quot;cost-analyser-application--system-and-software-architecture&quot;&gt;Cost Analyser Application – System and Software Architecture&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Entwickeln Sie ein einfaches Architekturmodell für Ihren UseCase!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;./image/Architektur_Modell.png&quot; alt=&quot;Architekturmodell&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Welche Architektur würden Sie wählen, warum?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wir haben uns für die Microservice Architecture entschieden. Wir glauben, dass diese Architektur ihren Zweck bei unserer Anwendung gut erfüllen kann und ist darüber hinaus sehr übersichtlich. Wie man es der oberen Abbildung entnehmen kann ist unser Architektur sehr einfach, wir wollen mit unserer Anwendung im Prinzip zwei Services dem Kunden anbieten, einmal ist es die Möglichkeit seine Geldbewegungen von verschiedenen Banken in einem Ort strukturiert zu speichern und darüber hinaus wollen wir ihr/ihm anbieten diese Daten auf einer einfache und effektive Art auszuwerten (Uploading Services +Anlaytical Services). Wir glauben, dass für diese Ziele die dargestellte Microservice Architektur gut geeignet ist.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Welche Art von Schnittstellen wären notwendig? Welche denkbar? Welche möglich?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Für unseren Projekt haben wir uns entschieden für die REST API Schnitstelle. Alternativ könnte man SOAP und WDL wählen. Die Nutzung von Rest-API bietet die Möglichkeit eine sehr hohe Skalierbarkeit zu erreichen, da Client und Server voneinander entfernt sind.  Ein weitere Vorteil von Rest-API besteht darin, dass man es einfacher in vorhandener Website integrieren kann ohne die Webseite-Infrastruktur zu verändern.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wie können Sie „Messaging” nutzen?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Man könnte zum Beispiel das asynchrone Messaging nutzen, bei den Analytischen Anwendungen und zwar so, dass der Kunde nue Analyse anfordert, die es benötigt ein komplexeres Modell zu trainieren und die Anfrage wird zuerst in „Que“ gespeichert und zu einem günstigen Zeitpunkt umgesetzt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Welche Informationen können Sie aus „Log”-Dateien extrahieren?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In unserem Anwendungsbeispiel würden wir gerne die Zeitstempeln von den Uploads, den Banknamen, den Usernamen extrahieren. Darüber hinaus sollen jeglicher Art von Fehler die während der Benutzung der App aufgetreten sind protokoliert werden. Des weiteren sollen die TimeStamps protokolliert werden wann der Kunde eine Anfrage anfragte und wann er die Antwort erhalten hat. Wir würden auch gerne die Zeit, die der Kunde jedes Mail in der App verweilt aus den „Log“-Dateien ablesen und wie oft er die App benutzt.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Wie könnten Sie über „Internationalisierung stolpern” –(nicht nur Kunden aus diversen Ländern)?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Wir gehen davon aus, dass wir nicht über die Internationalisierung stolpern werden , da unsere Requirements präzise definiert sind.
Theoretisch könnte man sich folgende Probleme vorstellen (Wir gehen zuerst davon aus, dass unsere App nur in dem deutschsprachigen Raum und in GB + USA zur Verfügung stehen wird);
Folgende Issues können zu Problemen führen:
	- verschiedene rechtliche Anforderungen in den jeweiligen Ländern;
	- verschiedene Währungen;
	-  verschiedene Zeitzonen; 
	- Metrische Systeme sind unterschiedlich- Formatierung!;
	- verschiedene Buchstaben, Umlaute;&lt;/p&gt;</content><author><name></name></author><summary type="html">Cost Analyser Application – System and Software Architecture</summary></entry></feed>